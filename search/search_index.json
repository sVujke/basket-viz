{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n    shot_charts.md\n</code></pre>"},{"location":"shot_charts/animated_scatter/","title":"Animated Scatter","text":""},{"location":"shot_charts/animated_scatter/#animated-field-goal-scatter","title":"Animated Field Goal Scatter","text":"<p>The <code>plot_field_goal_scatter_temporal</code> function creates a scatter plot of made and missed shots.</p>"},{"location":"shot_charts/animated_scatter/#parameters","title":"Parameters","text":"<ul> <li><code>made</code> (DataFrame): DataFrame containing made shots.</li> <li><code>miss</code> (DataFrame): DataFrame containing missed shots.</li> <li><code>title</code> (str, optional): Title of the plot.</li> </ul>"},{"location":"shot_charts/animated_scatter/#examples","title":"Examples","text":""},{"location":"shot_charts/animated_scatter/#basic-scatter-shot-chart","title":"Basic Scatter Shot Chart","text":"<pre><code>from basket_viz.court.shot_charts import ShotChart  \n\nmade_shots = pd.DataFrame({\n    \"COORD_X\": [100, -150, 300, 450, -500, 600],\n    \"COORD_Y\": [50, 75, 200, 250, 350, 500],\n    \"UTC\": list(range(1, 7))\n})\n\n# Missed shots\nmissed_shots = pd.DataFrame({\n    \"COORD_X\": [200, -250, -400, 550, 600, -700],\n    \"COORD_Y\": [100, 450, 300, 350, 450, 500],\n    \"UTC\": list(range(1, 7))\n})\n\nshot_chart = ShotChart()\nshot_chart.plot_field_goal_scatter_temporal(made_shots, missed_shots, title=\"Field Goals Scatter Plot\")\n</code></pre>"},{"location":"shot_charts/animated_scatter/#customized-scatter-shot-chart","title":"Customized Scatter Shot Chart","text":"<pre><code>from basket_viz.court.shot_charts import ShotChart  \n\nshot_chart = ShotChart()\n\n# set figure size \nshot_chart.set_config_param(figsize=(14,12))\n\n# change marker colors\nshot_chart.set_config_param(color_map={\"made\": \"purple\", \"miss\": \"black\"})\n\n# change court colors \nshot_chart.set_config_param(court_background_color=\"gray\", court_line_color=\"white\")\n\n#change title \nshot_chart.set_config_param(title={\"fontsize\": 30, \"fontweight\": \"bold\", \"color\": \"white\"})\n\nshot_chart.plot_field_goal_scatter(made_shots, missed_shots, title=\"Field Goals Scatter Plot\")\n</code></pre>"},{"location":"shot_charts/euroleague_scatter/","title":"Euroleague Scatter - Shot Chart","text":"<p>The <code>euroleague_field_goal_dots</code> method in the <code>ShotChart</code> class serves as a wrapper that simplifies the visualization of field goal attempts using data from the Euroleague API. This method provides a convenient plug-and-play solution for creating detailed shot charts tailored to Euroleague players or teams.</p> <p>This function leverages the <code>team_configs</code> from the <code>basket_viz.court.euroleague_team_configs</code> module to color the plots according to team branding. The team codes used in these configurations match the ones in the Euroleague API, making it straightforward to apply team-specific styles.</p>"},{"location":"shot_charts/euroleague_scatter/#function-euroleague_field_goal_dots","title":"Function: <code>euroleague_field_goal_dots</code>","text":""},{"location":"shot_charts/euroleague_scatter/#description","title":"Description","text":"<p>The <code>euroleague_field_goal_dots</code> function is designed to seamlessly integrate with the Euroleague API, allowing users to generate visualizations of field goal attempts with minimal setup. By leveraging this function, users can create both static and temporal scatter plots that illustrate the shooting performance of a specified player or team during a game or across multiple games.</p>"},{"location":"shot_charts/euroleague_scatter/#parameters","title":"Parameters","text":"<ul> <li><code>df</code> (DataFrame): The DataFrame containing shot data.</li> <li><code>player_name</code> (str, optional): The name of the player to visualize. Defaults to <code>None</code>.</li> <li><code>team_name</code> (str, optional): The name of the team to visualize. Defaults to <code>None</code>.</li> <li><code>game_id</code> (str, optional): The ID of the game to visualize. Defaults to <code>None</code>.</li> <li><code>temporal</code> (bool, optional): If <code>True</code>, creates a temporal animation of shots over time. If <code>False</code>, creates a static scatter plot. Defaults to <code>False</code>.</li> <li><code>title</code> (str, optional): The title of the plot. Defaults to <code>None</code>.</li> </ul>"},{"location":"shot_charts/euroleague_scatter/#example-usage-static","title":"Example Usage - Static","text":"<pre><code>import pandas as pd\nfrom basket_viz.court.shot_charts import ShotChart  \nfrom basket_viz.court.euroleague_team_configs import team_configs\n\n# load data from Euroleague API \ndf = pd.DataFrame(data)\n\n# Create ShotChart instance with Barcelona team configuration\nteam_config = team_configs['BAR']\nshot_chart = ShotChart(config=team_config)\n\n# Visualize Rubio's shots in Euroleague 23/24 season\nplayer_name = \"Rubio, Ricky\".upper()\nshot_chart.euroleague_field_goal_dots(\n    df,\n    player_name=player_name,\n    game_id=None,\n    temporal=False,\n    title=f\"{player_name} \\n EUROLEAGUE 23/24\"\n)\n\n</code></pre> <pre><code>import pandas as pd\nfrom basket_viz.court.shot_charts import ShotChart  \nfrom basket_viz.court.euroleague_team_configs import team_configs\n\n# load euroleague api data \ndf = pd.DataFrame(data)\n\n# Create ShotChart instance with Virtus Bologna team configuration\nteam_config = team_configs['VIR']\nshot_chart = ShotChart(config=team_config)\n\n# Visualize Shengelia's shots in Euroleague 23/24 season\nplayer_name = \"Shengelia, Tornike\".upper()\nshot_chart.euroleague_field_goal_dots(\n    df,\n    player_name=player_name,\n    game_id=None,\n    temporal=False,\n    title=f\"{player_name} \\n EUROLEAGUE 23/24\"\n)\n\n</code></pre> <pre><code>import pandas as pd\nfrom basket_viz.court.shot_charts import ShotChart  \nfrom basket_viz.court.euroleague_team_configs import team_configs\n\n# load euroleague api data \ndf = pd.DataFrame(data)\n\n# Create ShotChart instance with Panathenaikos team configuration\nteam_config = team_configs['PAN']\nshot_chart = ShotChart(config=team_config)\n\n# Visualize Nunn's shots in Euroleague 23/24 season\nplayer_name = \"Nunn, Kendrick\".upper()\nshot_chart.euroleague_field_goal_dots(\n    df,\n    player_name=player_name,\n    game_id=None,\n    temporal=False,\n    title=f\"{player_name} \\n EUROLEAGUE 23/24\"\n)\n\n</code></pre>"},{"location":"shot_charts/euroleague_scatter/#example-usage-animated","title":"Example Usage - Animated","text":"<p>The primary distinction between generating an animated plot and a static plot lies in the adjustment of a single parameter, <code>temporal=True</code>.</p> <pre><code>import pandas as pd\nfrom basket_viz.court.shot_charts import ShotChart  \nfrom basket_viz.court.euroleague_team_configs import team_configs\n\n# load euroleague api data \ndf = pd.DataFrame(data)\n\n# Create ShotChart instance with Efes team configuration\nteam_config = team_configs['IST']\nshot_chart = ShotChart(config=team_config)\n\n# Visualize Larkin's shots in Euroleague 23/24 season\nplayer_name = \"Larkin, Shane\".upper()\nshot_chart.euroleague_field_goal_dots(\n    df,\n    player_name=player_name,\n    game_id=None,\n    temporal=True,\n    title=f\"{player_name} \\n EUROLEAGUE 23/24\"\n)\n\n</code></pre> <p></p> <pre><code>import pandas as pd\nfrom basket_viz.court.shot_charts import ShotChart  \nfrom basket_viz.court.euroleague_team_configs import team_configs\n\n# load euroleague api data \ndf = pd.DataFrame(data)\n\n# Create ShotChart instance with Crvena Zvezda team configuration\nteam_config = team_configs['RED']\nshot_chart = ShotChart(config=team_config)\n\n# Visualize Teodosic's shots in Euroleague 23/24 season\nplayer_name = \"Teodosic, Milos\".upper()\nshot_chart.euroleague_field_goal_dots(\n    df_23,\n    player_name=player_name,\n    game_id=None,\n    temporal=True,\n    title=f\"{player_name} \\n EUROLEAGUE 23/24\"\n\n</code></pre> <p></p>"},{"location":"shot_charts/overview/","title":"Shot Charts Overview","text":"<p>The primary purpose of the <code>ShotChart</code> object is to facilitate the creation of uniform and visually appealing field goal attempt plots for various players or teams. It includes a default configuration that can be easily modified, accessed, and exported to meet specific visualization needs.</p> <p>In addition, the <code>ShotChart</code> class offers a comprehensive API for generating both static and animated plots. It also provides specialized wrappers for specific leagues, such as the Euroleague, and includes a collection of configurations that customize the plots according to team colors and branding.</p>"},{"location":"shot_charts/overview/#how-it-works","title":"How it works","text":"<p>todo add diagram here </p>"},{"location":"shot_charts/overview/#configuration-and-parameters","title":"Configuration and Parameters","text":"<p>The <code>ShotChart</code> class has a default config, enabling a quick start</p> <pre><code>from basket_viz.court.shot_charts import ShotChart  \n\nshot_chart = ShotChart()\n</code></pre>"},{"location":"shot_charts/overview/#get-and-set-config-params","title":"Get and set config params","text":"<p>You can check the config parameters at any time, since it is mutable</p> <pre><code>shot_chart.get_config()\n</code></pre> <p>and if for customization purposes update them with </p> <pre><code>shot_chart.set_config_param(figsize=(14,12))\n</code></pre> <p>The <code>ShotChart</code> class can be initialized with a configuration dictionary. Here is an example:</p> <pre><code>custom_config = {\n    \"color_map\": {\"made\": \"blue\", \"miss\": \"red\"},\n    \"marker_size\": 15,\n    \"figsize\": (12, 10),\n    \"court_line_color\": \"grey\",\n    \"line_width\": 2,\n    \"outer_lines\": False,\n    \"court_background_color\": \"lightgrey\"\n}\n\nshot_chart = ShotChart(config=custom_config)\n</code></pre>"},{"location":"shot_charts/overview/#exporting-plots","title":"Exporting Plots","text":"<p>The class provides functionality to save plots in different formats depending on the plot type (static or animated). </p> <pre><code>\nshot_chart = ShotChart()\n\nshot_chart.plot_field_goal_scatter(made, missed)\n\nshot_chart.save_plot(output_dir, file_name, 'png')\n</code></pre> <p>For animated plots the supported formats are gif and mp4: </p> <pre><code>\nshot_chart = ShotChart()\n\nshot_chart.plot_field_goal_scatter_temporal(made, missed)\n\nshot_chart.save_plot(output_dir, file_name, 'gif')\n</code></pre>"},{"location":"shot_charts/overview/#features","title":"Features","text":""},{"location":"shot_charts/overview/#static-scatter","title":"Static Scatter","text":""},{"location":"shot_charts/overview/#animated-scatter","title":"Animated Scatter","text":""},{"location":"shot_charts/overview/#heatmap","title":"Heatmap","text":""},{"location":"shot_charts/static_scatter/","title":"Static Scatter","text":""},{"location":"shot_charts/static_scatter/#plot-field-goal-scatter","title":"Plot Field Goal Scatter","text":"<p>The <code>plot_field_goal_scatter</code> function creates a scatter plot of made and missed shots.</p>"},{"location":"shot_charts/static_scatter/#parameters","title":"Parameters","text":"<ul> <li><code>made</code> (DataFrame): DataFrame containing made shots.</li> <li><code>miss</code> (DataFrame): DataFrame containing missed shots.</li> <li><code>title</code> (str, optional): Title of the plot.</li> </ul>"},{"location":"shot_charts/static_scatter/#examples","title":"Examples","text":""},{"location":"shot_charts/static_scatter/#basic-scatter-shot-chart","title":"Basic Scatter Shot Chart","text":"<pre><code>from basket_viz.court.shot_charts import ShotChart  \n\nmade_shots = pd.DataFrame({\n    \"COORD_X\": [100, -150, 300, 450, -500, 600],\n    \"COORD_Y\": [50, 75, 200, 250, 350, 500],\n    \"UTC\": list(range(1, 7))\n})\n\n# Missed shots\nmissed_shots = pd.DataFrame({\n    \"COORD_X\": [200, -250, -400, 550, 600, -700],\n    \"COORD_Y\": [100, 450, 300, 350, 450, 500],\n    \"UTC\": list(range(1, 7))\n})\n\nshot_chart = ShotChart()\nshot_chart.plot_field_goal_scatter(made_shots, missed_shots, title=\"Field Goals Scatter Plot\")\n</code></pre> <p> a</p>"},{"location":"shot_charts/static_scatter/#customized-scatter-shot-chart","title":"Customized Scatter Shot Chart","text":"<pre><code>from basket_viz.court.shot_charts import ShotChart  \n\nshot_chart = ShotChart()\n\n# set figure size \nshot_chart.set_config_param(figsize=(14,12))\n\n# change marker colors\nshot_chart.set_config_param(color_map={\"made\": \"purple\", \"miss\": \"black\"})\n\n# change court colors \nshot_chart.set_config_param(court_background_color=\"gray\", court_line_color=\"white\")\n\n#change title \nshot_chart.set_config_param(title={\"fontsize\": 30, \"fontweight\": \"bold\", \"color\": \"white\"})\n\nshot_chart.plot_field_goal_scatter(made_shots, missed_shots, title=\"Field Goals Scatter Plot\")\n</code></pre>"}]}